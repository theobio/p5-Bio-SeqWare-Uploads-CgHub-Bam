#! /usr/bin/env perl

use warnings;
use strict;

use Bio::SeqWare::Uploads::CgHub::Bam;

=head1 NAME

upload-cghub-bam - Upload bam files to CgHub as a stepwise workflow

=cut

=head1 VERSION

Version 0.000.001

=cut

# Actual version should be the same as the base module.
our $VERSION = $Bio::SeqWare::Uploads::CgHub::Bam::VERSION;

############
### Main ###
############

my $app = Bio::SeqWare::Uploads::CgHub::Bam->new();
$app->run();

=head1 SYNOPSIS

  upload-cghub-bam [options]

  options:
    --version  Print the version
    --help     Extended option descriptions

    --verbose  Extra output
    --debug    Lots of extra output
    --log      Ouput prefixed with host, time, id, and level.

    --config   The config file, default = ~/.seqware/settings

For more option details, try C<upload-cghub-bam --help>. For full documentation,
try C<perldoc upload-cghub-bam>.

=head1 OPTIONS

Defaults may be provided by a config file

=head2 Short-Circuit Options.

=over 3

=item --version

If specified, the version will be printed and the program will exit. Ignored
if specified in a config file

=item --help

If specifed, a help message will be printed. Complete documentation is
provided via perldoc upload-cghub-bam. Ignored if specified in a config file

=back

=head2 Options controlling input

=over 3

=item --config [FILE]

The config file, provides defaults for options. See the CONFIG FILE section
for more details. This can be an absolute or relative path. If no config file
is specified, the default config file looked for will be "~/.seqware/settings".
Note: If specified in a config file, this is currently ignored, by may be
implemented eventually to allow multiple cascading config files.

=back

=head2 Options controlling output

=over 3

=item --verbose

If specfied, extra information is printed when running, generally state change
information.

=item --debug

If specified, lots of extra information is printed when running, including the
full list of option values. Implies --verbose. Note: this may cause passwords
to be dumped in plain text if provided on the command line or in the config
file.

=item --log

If specified, output will be formatted for a log file with a prefix. A message
like

 The message. If on several lines
 The prefix is added to each.
    Extra indenting is preserved.

Will be displayed like

 HOST TIMESTAMP RUN-UUID [LEVEL] The message. If on several lines
 HOST TIMESTAMP RUN-UUID [LEVEL] The prefix is added to each. Note:
 HOST TIMESTAMP RUN-UUID [LEVEL]    Extra indenting is preserved.

=over 3

=item HOST

The machine running the code that generated the message

=item TIMESTAMP

The date and time of the message

=item RUN-UUID

A unique id that can be used to match all messages from the same run.

=item [LEVEL]

The level generating the message, "INFO", "VERBOSE", "DEBUG", or "FATAL".

=item The message.

The text of the message. If the message wraps to the next line, the prefix
will be repeated.

=back

=back

=cut

=head1 DESCRIPTION

This program is used to upload bam files to CgHub, which is a relatively
complex stepwise process involving tracking progress and errors using a
database.

=cut

=head1 CONFIG FILE

=head2 Example

   # An example config file (no leading space should be used on left)
   # This is a comment, which will be ignored, as will the next two lines
   #
   
   dbUser = seqware
   dbPassword = "seqware"
   dbHost = dbtest.bioinf.unc.edu
   db = seqware_meta_db
   
   debug = 1
   
=head2 Description

A config file is used as the defaults for options. Any options, except
the --help, --version, and (for now) --config parameters can be read from the
conifig file. Options specified
on the command line will over-ride anything from the config file. If no
config file is specified, a default config file "~/.seqware/settings will be
looked for. This file should be readable only by the user; chmod 600 this
file if not.

Note, unlike the command line, options specified in the config
file need not be used, allowing one config file to contain parameters for
multiple programs. The drawback is if an option is misspelled in the
config file, it will fail silently. Only the main option name may be used (the
first given above). Aliases and short-option equivalents can only be used on
the command line.

The contents of the file are interpreted as follows:

=over 3

=item Blank lines

Lines consisting of only all white space are ignored

=item Comment lines

Lines where the first character in the line is a "#" symbol are comment lines
and are ignored.

=item option = value lines

The main content of the config file will be lines with an option name (without
the leading "--" ). If the option can take a value, it is separated from the
option by an "=" sign. If the option or value have leading or trailing spaces,
these are removed. If the first and last character of the value are quotes or
appostrophies, they will be removed and the value will be converted to a string.
This allows for strings with leading or trailing whitespace, escaped characters,
etc.

=back

=cut

=head1 INTERNALS

Nothing in this section is necessary for using this program, this is aimed only
at developers (mostly me). The implementation details described here may
change without advanced warning and possibly without updating documentation, as
this is not part of the API. You have been warned :)

This application mostly just runs code in the main application module,
Bio::SeqWare::Uploads::CgHub::Bam.

=head1 SEE ALSO

This is part of the p5-Bio-SeqWare-Uploads-CgHub-Bam distribution. The main
documentation is the Bio::SeqWare::Uploads::CgHub::Bam module POD.
